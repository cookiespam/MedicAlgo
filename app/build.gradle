apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'
//apply plugin: 'jacoco'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.0'
    defaultConfig {
        applicationId 'com.mbaxajl3.medicalgo'
        minSdkVersion 27
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

//    jacoco {
//        version = '0.8.5'
//    }

//    tasks.withType(Test) {
//        jacoco.includeNoLocationClasses = true
//    }
//
    task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

        reports {
            xml.enabled = true
            html.enabled = true
        }

        def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
        def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
        def mainSrc = "$project.projectDir/src/main/java"

        sourceDirectories.setFrom files([mainSrc])
        classDirectories.setFrom files([debugTree])
        executionData.setFrom fileTree(dir: project.buildDir, includes: [
                'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
        ])
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.versions.properties'
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        animationsDisabled true
    }
}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = 'com.google.protobuf:protoc:3.10.0'

        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    remove java
                }
                task.builtins {
                    java {}
                }
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.preference:preference:1.1.1"
    testImplementation 'junit:junit:4.13'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation 'org.mockito:mockito-core:3.3.0'
    testImplementation 'org.json:json:20140107'
    androidTestImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'org.mockito:mockito-core:3.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "com.google.truth:truth:1.0.1"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    implementation 'com.github.jd-alexander:LikeButton:0.2.3'
    implementation 'com.google.api.grpc:grpc-google-cloud-speech-v1p1beta1:0.75.3'
    implementation "io.perfmark:perfmark-api:0.20.1"
    implementation 'com.google.protobuf:protobuf-java:3.11.4'
    implementation 'com.google.protobuf:protobuf-java-util:3.11.4'
    implementation 'joda-time:joda-time:2.10.5'
    implementation 'io.grpc:grpc-okhttp:1.27.1'
    implementation 'com.google.flogger:flogger:0.4'
    implementation 'com.google.flogger:flogger-system-backend:0.4'
    implementation 'com.github.piasy:BigImageViewer:1.6.2'
    implementation 'com.github.piasy:ProgressPieIndicator:1.6.2'
    implementation 'com.github.piasy:GlideImageLoader:1.6.2'
    implementation project(':pocketsphinx-android-5prealpha-release')
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'software.amazon.awssdk:transcribestreaming:2.10.76'
    implementation 'org.reactivestreams:reactive-streams:1.0.3'
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
}

ant.importBuild 'assets.xml'
preBuild.dependsOn(list, checksum)
clean.dependsOn(clean_assets)
